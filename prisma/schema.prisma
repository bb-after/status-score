datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  keywords  Keyword[]
  reports   Report[]
  admin     Boolean   @default(false)
  createdAt DateTime  @default(now())
}

model Keyword {
  id          Int                   @id @default(autoincrement())
  name        String
  user        User                  @relation(fields: [userId], references: [id])
  userId      Int
  reports     Report[]
  dataSources KeywordToDataSource[] // Reference the join table
  createdAt   DateTime              @default(now())
}

model DataSource {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique // E.g., 'Gemini', 'OpenAI'
  model               String // Model name, e.g., 'gemini-1.5-flash' or 'text-davinci-003'
  prompt              String // Custom prompt for this data source
  active              Boolean               @default(true) // Whether this data source is active
  createdAt           DateTime              @default(now())
  KeywordToDataSource KeywordToDataSource[]
}

// Join table for the many-to-many relationship between Keyword and DataSource
model KeywordToDataSource {
  keywordId    Int
  dataSourceId Int
  keyword      Keyword    @relation(fields: [keywordId], references: [id])
  dataSource   DataSource @relation(fields: [dataSourceId], references: [id])

  @@id([keywordId, dataSourceId]) // Composite primary key defined at the model level
}

model Report {
  id        Int      @id @default(autoincrement())
  aiEngine  String
  payload   Json
  imageUrl  String?
  pdfUrl    String?
  keyword   Keyword  @relation(fields: [keywordId], references: [id])
  keywordId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}
